plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/table_top_craft.accesswidener")
}

repositories {
	mavenCentral()
	flatDir { dirs 'libs' }
	maven { url "https://api.modrinth.com/maven/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	// Mod Menu
	modImplementation "maven.modrinth:modmenu:${project.mod_menu_version}"
	// FlatDir libs
	if (new File("libs").exists()) {
		for (File f : new File("libs").listFiles()) {
			String name = f.getName().replace(".jar", "")
			String[] split = name.split("-", 2)
			String lib = "flatdir.lib:" + split[0] + ":" + split[1]
			System.out.println("| " + lib)
			modRuntimeOnly lib
		}
	}
	// Sodium and Iris
	modCompileOnly ("maven.modrinth:sodium:${project.sodium_version}")
	modCompileOnly ("maven.modrinth:iris:${project.iris_version}")
	// exp4j
	modImplementation 'net.objecthunter:exp4j:0.4.8'
	include 'net.objecthunter:exp4j:0.4.8'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}